service: lambdas
frameworkVersion: "3"

plugins:
  - serverless-offline
  - serverless-dynamodb-local
  - serverless-plugin-typescript
  - serverless-plugin-include-dependencies

package:
  individually: true

provider:
  name: aws
  runtime: nodejs16.x
  region: eu-west-1
  # environment:
  #   car-shop-table: "car-shop-table"
  #   stock-car-shop-table: "stock-car-shop-table"
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - "dynamodb:*"
          Resource: "*"
custom:
  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      migrate: true
    #   migrate: true
    # migration:
    #   dir: offline/migrations

functions:
  getProductsById:
    handler: handlers.getProductsById
    events:
      - http:
          path: products/{id}
          method: get
          cors: true
          request:
            parameters:
              paths:
                id: true

  getProductsList:
    handler: handlers.getProductsList
    events:
      - http:
          path: products
          method: get
          cors: true

  createProduct:
    handler: handlers.createProduct
    events:
      - http:
          path: put-products
          method: post
          cors: true

  deleteProduct:
    handler: handlers.deleteProduct
    events:
      - http:
          path: delete-product
          method: post
          cors: true

resources:
  Resources:
    CarsDynamoDbTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: car-shop-table
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    StockDynamoDbTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: stock-car-shop-table
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
